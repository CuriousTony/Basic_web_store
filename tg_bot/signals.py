from django.db.models.signals import post_save
from django.dispatch import receiver
from orders.models import Order
from reviews.models import Review
from tg_bot.bot_instance import bot, ADMIN_CHAT_ID
import logging
import requests
import telebot

logger = logging.getLogger(__name__)


@receiver(post_save, sender=Order)
def notify_new_order(sender, instance, created, **kwargs):
    current_status = instance.status
    previous_status = getattr(instance, '_previous_status', None)

    if current_status == 'pending' and (previous_status != 'pending' or created):
        try:
            text = (
                f"üõí –ù–æ–≤—ã–π –æ–ø–ª–∞—á–µ–Ω–Ω—ã–π –∑–∞–∫–∞–∑ ‚Ññ{instance.id}\n"
                f"–°—É–º–º–∞: {instance.total_price} —Ä—É–±.\n"
                f"–°—Ç–∞—Ç—É—Å: {instance.status}\n"
                f"–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø–æ–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å –∑–∞–∫–∞–∑–∞ –Ω–∞ –∞–∫—Ç—É–∞–ª—å–Ω—ã–π!"
            )
            bot.send_message(ADMIN_CHAT_ID, text)  # –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–π –≤—ã–∑–æ–≤!
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –∑–∞–∫–∞–∑–µ {instance.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ –∑–∞–∫–∞–∑–µ: {str(e)}")


@receiver(post_save, sender=Review)
def notify_new_review(sender, instance, created, **kwargs):
    try:
        logger.info(
            f"–°–∏–≥–Ω–∞–ª —Å—Ä–∞–±–æ—Ç–∞–ª. –û—Ç–∑—ã–≤ ID={instance.id}, "
            f"–°–æ–∑–¥–∞–Ω: {created}, is_approved={instance.is_approved}"
        )
        if created and not instance.is_approved:
            if not instance.bouquet:
                logger.error("–ë—É–∫–µ—Ç –Ω–µ —É–∫–∞–∑–∞–Ω –≤ –æ—Ç–∑—ã–≤–µ!")
                return
            text = (
                f"üìù –ù–æ–≤—ã–π –æ—Ç–∑—ã–≤ –Ω–∞ –±—É–∫–µ—Ç {instance.bouquet.name}\n"
                f"–†–µ–π—Ç–∏–Ω–≥: {instance.rating}/5\n"
                f"–ù–µ –∑–∞–±—É–¥—å—Ç–µ –ø—Ä–æ–≤–µ—Å—Ç–∏ –º–æ–¥–µ—Ä–∞—Ü–∏—é –æ—Ç–∑—ã–≤–∞ –∏ –æ–¥–æ–±—Ä–∏—Ç—å –µ–≥–æ –ø—É–±–ª–∏–∫–∞—Ü–∏—é!"
            )
            bot.send_message(ADMIN_CHAT_ID, text)
            logger.info(f"–£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ –æ—Ç–∑—ã–≤–µ {instance.id} –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ.")
    except requests.exceptions.RequestException as e:
        logger.error(f"–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram API: {str(e)}")
    except telebot.apihelper.ApiException as e:
        logger.error(f"–û—à–∏–±–∫–∞ Telegram API: {str(e)}")
    except Exception as e:
        logger.error(f"–ù–µ–æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω–∞—è –æ—à–∏–±–∫–∞: {str(e)}")
